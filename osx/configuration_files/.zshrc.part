# -- Custom Configuration Start --

# ZSH Config
ZSH_THEME="robbyrussell"
plugins=(git zsh-autosuggestions)

# Configure NVM
export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"                  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && . "$NVM_DIR/bash_completion" # This loads nvm bash_completion

# AWS Role switching helper
GREEN="\033[1;32m"
alias role='echo "Active Role: ${GREEN}$AWS_PROFILE"'

function switch {
	if [ -z "$1" ]; then
		export AWS_PROFILE=default
	else
		export AWS_PROFILE=$1
	fi
	role
}

switch

# Share content via a pre-signed S3 url
function share {
	bucket_name=$1
	file=$2

	if ! [[ -n "$bucket_name" ]]; then
		echo "No bucket name has been specified."
		return 1
	fi

	if ! [[ -n "$file" ]]; then
		echo "No file has been specified."
		return 1
	fi

	aws s3 cp $file s3://$bucket_name/$file
	aws s3 presign --expires-in 86399 s3://$bucket_name/$file
}

function assume {
	role=$1
	profile_name="assumed-role"

	if ! [[ -n "$role" ]]; then
		echo "No role has been specified."
		return 1
	fi

	role_output=$(aws sts assume-role --role-arn $role --role-session-name Cli-Session)

	export AWS_ACCESS_KEY_ID=$(echo $role_output | jq -r .Credentials.AccessKeyId)
	export AWS_SECRET_ACCESS_KEY=$(echo $role_output | jq -r .Credentials.SecretAccessKey)
	export AWS_SESSION_TOKEN=$(echo $role_output | jq -r .Credentials.SessionToken)
}

# -- Custom Configuration End --
